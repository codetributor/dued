import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import Header from "@/components/Header/Header";
import Input from "@/components/Input/Input";
import { useEffect, useState } from "react";
import ItemList from "@/components/ItemList/ItemList";

export default function Home() {
  const [itemList, setItemList] = useState<any>([]);
  const [toggled, setToggled] = useState(false);
  const [editItem, setEditItem] = useState("");

  useEffect(() => {}, [itemList, editItem]);

  const toggle: any = () => {
    toggled ? setToggled(false) : setToggled(true);
  };
  const addItem: any = (item: string) => {
    setItemList([
      ...itemList,
      {
        todo: item,
        check: "",
      },
    ]);
  };

  const deleteItem: any = (item: string) => {
    let itemListArray = itemList;
    for (let i = 0; i < item.length; i++) {
      if (itemListArray[i]?.todo == item) {
        itemListArray[i] = itemListArray[itemListArray.length - 1];
        itemListArray.pop();
      }
    }
    setItemList([...itemListArray]);
  };

  const check = (item: string) => {
    let itemListArray = itemList;
    for (let i = 0; i < itemListArray.length; i++) {
      if (itemListArray[i].todo == item) {
        if (itemListArray[i].check == "") {
          itemListArray[i].check = "blue";
        } else {
          itemListArray[i].check = "";
        }
      }
    }
    setItemList([...itemListArray]);
  };

  const edit = (item: string) => {
    setEditItem(item);
  };

  const resetEditItem = () => {
    setEditItem("");
  };

  const editItemList = (item: string, editItem: string) => {
    let itemListArray = itemList;
    for (let i = 0; i < itemListArray.length; i++) {
      if (itemListArray[i].todo == editItem) {
        itemListArray[i].todo = item;
      }
    }
    setItemList(itemListArray);
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header
        isToggle={() => {
          toggle();
        }}
      />
      {toggled ? (
        <Input
          addItem={(item: string) => addItem(item)}
          isToggle={() => toggle()}
          editItem={editItem}
          resetEditItem={() => {
            resetEditItem();
          }}
          editItemList={(item: string, editItem: string) => {
            editItemList(item, editItem);
          }}
        />
      ) : (
        ""
      )}
      <ItemList
        itemList={itemList}
        deleteItem={(item: string) => {
          deleteItem(item);
        }}
        check={(item: string) => {
          check(item);
        }}
        edit={(item: string) => {
          edit(item);
        }}
        toggle={() => {
          toggle();
        }}
      />
    </>
  );
}
